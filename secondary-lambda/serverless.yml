service: playground
provider:
  name: aws
  runtime: python3.7
  timeout: 29
  stage: dev
  region: eu-central-1
  memorySize: 128
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource: "*"
  environment: 
    # For calling lambdas, we need a full ARN (or at least the service and stage)
    ARN_PREFIX: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-"
  
    
plugins:
  - serverless-wsgi
  - serverless-python-requirements
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-pseudo-parameters


    
  
custom:
  pythonRequirements:
    useDownloadCache: true   
    useStaticCache: true
  wsgi:
    app: handler.app
    packRequirements: false

functions:
  endpoint: 
    handler: handler.endpoint
      
  app:
    handler: wsgi_handler.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
    environment:
      # Service: ${self:service}
      
      # Region: #{AWS::Region}
      # AccountID: #{AWS::AccountId}
      # Stage: ${self:provider:stage}
      JustSomeString: "I'm an environment variable!"